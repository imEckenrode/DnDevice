// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.4
// LVGL version: 8.3.6
// Project name: PlayerProfile_New

#ifndef _PLAYERPROFILE_NEW_UI_H
#define _PLAYERPROFILE_NEW_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl/lvgl.h"

#include "ui_helpers.h"
#include "screen_actions.h"      //This should always be changed
void DmgMain_Animation(lv_obj_t * TargetObject, int delay);
void HealMain_Animation(lv_obj_t * TargetObject, int delay);
// SCREEN: ui_HealthProfile
void ui_HealthProfile_screen_init(void);
extern lv_obj_t * ui_HealthProfile;
extern lv_obj_t * ui_HP_Bck;
extern lv_obj_t * ui_HP_hpBck;
extern lv_obj_t * ui_HP_hpFill;
extern lv_obj_t * ui_HP_hpTempFill;
extern lv_obj_t * ui_HP_hpReduceMax;
extern lv_obj_t * ui_HP_hpHeart;
void ui_event_HP_hpTotal(lv_event_t * e);
extern lv_obj_t * ui_HP_hpTotal;
void ui_event_HP_healBtn(lv_event_t * e);
extern lv_obj_t * ui_HP_healBtn;
extern lv_obj_t * ui_HP_healTxt;
extern lv_obj_t * ui_HP_title;
extern lv_obj_t * ui_HP_titleTxt;
void ui_event_HP_toScreen_PP(lv_event_t * e);
extern lv_obj_t * ui_HP_toScreen_PP;
extern lv_obj_t * ui_HP_profPic;
extern lv_obj_t * ui_HP_toScreen_XX;
extern lv_obj_t * ui_HP_hpMoreBck;
void ui_event_HP_hpMoreTemp(lv_event_t * e);
extern lv_obj_t * ui_HP_hpMoreTemp;
extern lv_obj_t * ui_HP_hpMoreTempTxt;
void ui_event_HP_hpMoreCurrent(lv_event_t * e);
extern lv_obj_t * ui_HP_hpMoreCurrent;
extern lv_obj_t * ui_HP_hpMoreCurrentTxt;
void ui_event_HP_hpMoreMax(lv_event_t * e);
extern lv_obj_t * ui_HP_hpMoreMax;
extern lv_obj_t * ui_HP_hpMoreMaxTxt;
extern lv_obj_t * ui_HP_healInput;
extern lv_obj_t * ui_HP_healKeyboard;
void ui_event_HP_healConfirmBtn(lv_event_t * e);
extern lv_obj_t * ui_HP_healConfirmBtn;
extern lv_obj_t * ui_HP_healConfirmTxt;
extern lv_obj_t * ui_HP_healTextArea;
// SCREEN: ui_PlayerProfile
void ui_PlayerProfile_screen_init(void);
extern lv_obj_t * ui_PlayerProfile;
void ui_event_PP_Bck(lv_event_t * e);
extern lv_obj_t * ui_PP_Bck;
extern lv_obj_t * ui_PP_condBck;
void ui_event_PP_condBlinded(lv_event_t * e);
extern lv_obj_t * ui_PP_condBlinded;
void ui_event_PP_condCharmed(lv_event_t * e);
extern lv_obj_t * ui_PP_condCharmed;
void ui_event_PP_condDeafened(lv_event_t * e);
extern lv_obj_t * ui_PP_condDeafened;
void ui_event_PP_condExhaustion(lv_event_t * e);
extern lv_obj_t * ui_PP_condExhaustion;
extern lv_obj_t * ui_PP_condExhaustionNumBck;
extern lv_obj_t * ui_PP_condExhaustionNum;
void ui_event_PP_condFrightened(lv_event_t * e);
extern lv_obj_t * ui_PP_condFrightened;
void ui_event_PP_condNextBtn(lv_event_t * e);
extern lv_obj_t * ui_PP_condNextBtn;
extern lv_obj_t * ui_PP_condNextTxt;
void ui_event_PP_condLastBtn(lv_event_t * e);
extern lv_obj_t * ui_PP_condLastBtn;
extern lv_obj_t * ui_PP_condLastTxt;
void ui_event_PP_condMoreBtn(lv_event_t * e);
extern lv_obj_t * ui_PP_condMoreBtn;
extern lv_obj_t * ui_PP_condMoreTxt;
extern lv_obj_t * ui_PP_profilePic;
extern lv_obj_t * ui_PP_profPicArtificer;
extern lv_obj_t * ui_PP_profPicWarlock;
extern lv_obj_t * ui_PP_profPicTWP;
extern lv_obj_t * ui_PP_hpBck;
extern lv_obj_t * ui_PP_hpFill;
extern lv_obj_t * ui_PP_hpTempFill;
extern lv_obj_t * ui_PP_hpReduceMax;
extern lv_obj_t * ui_PP_hpHeart;
extern lv_obj_t * ui_PP_hpTotal;
void ui_event_PP_acBck(lv_event_t * e);
extern lv_obj_t * ui_PP_acBck;
extern lv_obj_t * ui_PP_acCover_half;
extern lv_obj_t * ui_PP_acCover_threeQuarter;
extern lv_obj_t * ui_PP_acCover_total;
extern lv_obj_t * ui_PP_acShield;
extern lv_obj_t * ui_PP_acTotal;
extern lv_obj_t * ui_PP_acMath;
extern lv_obj_t * ui_PP_nameBck;
extern lv_obj_t * ui_PP_name;
void ui_event_PP_toScreen_Prev(lv_event_t * e);
extern lv_obj_t * ui_PP_toScreen_Prev;
extern lv_obj_t * ui_PP_toScreen_Prev_txt;
void ui_event_PP_targetBtn(lv_event_t * e);
extern lv_obj_t * ui_PP_targetBtn;
extern lv_obj_t * ui_PP_targetBtnTxt;
void ui_event_PP_turnCountBck(lv_event_t * e);
extern lv_obj_t * ui_PP_turnCountBck;
extern lv_obj_t * ui_PP_turnCountTxt;
extern lv_obj_t * ui_PP_turnCountNum;
extern lv_obj_t * ui_PP_dmgInput;
extern lv_obj_t * ui_PP_dmgKeyboard;
void ui_event_PP_dmgConfirmBtn(lv_event_t * e);
extern lv_obj_t * ui_PP_dmgConfirmBtn;
extern lv_obj_t * ui_PP_dmgConfirmTxt;
extern lv_obj_t * ui_PP_dmgTextArea;
extern lv_obj_t * ui_PP_acInput;
extern lv_obj_t * ui_PP_acKeyboard;
void ui_event_PP_acConfirmBtn(lv_event_t * e);
extern lv_obj_t * ui_PP_acConfirmBtn;
extern lv_obj_t * ui_PP_acConfirmTxt;
extern lv_obj_t * ui_PP_acTextArea;
extern lv_obj_t * ui_PPP_condMoreBck;
void ui_event_PPP_condMoreClose(lv_event_t * e);
extern lv_obj_t * ui_PPP_condMoreClose;
extern lv_obj_t * ui_PPP_condMoreTxt;
void ui_event_PPP_condBlinded(lv_event_t * e);
extern lv_obj_t * ui_PPP_condBlinded;
void ui_event_PPP_condCharmed(lv_event_t * e);
extern lv_obj_t * ui_PPP_condCharmed;
void ui_event_PPP_condDeafened(lv_event_t * e);
extern lv_obj_t * ui_PPP_condDeafened;
void ui_event_PPP_condDisarmed(lv_event_t * e);
extern lv_obj_t * ui_PPP_condDisarmed;
void ui_event_PPP_condExhaustion(lv_event_t * e);
extern lv_obj_t * ui_PPP_condExhaustion;
extern lv_obj_t * ui_PPP_condExhaustionNumBck;
extern lv_obj_t * ui_PPP_condExhaustionNum;
void ui_event_PPP_condFrightened(lv_event_t * e);
extern lv_obj_t * ui_PPP_condFrightened;
void ui_event_PPP_condGrappled(lv_event_t * e);
extern lv_obj_t * ui_PPP_condGrappled;
void ui_event_PPP_condHidden(lv_event_t * e);
extern lv_obj_t * ui_PPP_condHidden;
void ui_event_PPP_condIncapacitated(lv_event_t * e);
extern lv_obj_t * ui_PPP_condIncapacitated;
void ui_event_PPP_condInvisible(lv_event_t * e);
extern lv_obj_t * ui_PPP_condInvisible;
void ui_event_PPP_condObscured(lv_event_t * e);
extern lv_obj_t * ui_PPP_condObscured;
void ui_event_PPP_condParalyzed(lv_event_t * e);
extern lv_obj_t * ui_PPP_condParalyzed;
void ui_event_PPP_condPetrified(lv_event_t * e);
extern lv_obj_t * ui_PPP_condPetrified;
void ui_event_PPP_condPoisoned(lv_event_t * e);
extern lv_obj_t * ui_PPP_condPoisoned;
void ui_event_PPP_condProne(lv_event_t * e);
extern lv_obj_t * ui_PPP_condProne;
void ui_event_PPP_condRaging(lv_event_t * e);
extern lv_obj_t * ui_PPP_condRaging;
void ui_event_PPP_condRestained(lv_event_t * e);
extern lv_obj_t * ui_PPP_condRestained;
void ui_event_PPP_condSurprised(lv_event_t * e);
extern lv_obj_t * ui_PPP_condSurprised;
void ui_event_PPP_condStunned(lv_event_t * e);
extern lv_obj_t * ui_PPP_condStunned;
void ui_event_PPP_condUnconcious(lv_event_t * e);
extern lv_obj_t * ui_PPP_condUnconcious;
extern lv_obj_t * ui____initial_actions0;

LV_IMG_DECLARE(ui_img_552092932);    // assets\Heart Outline - small.png
LV_IMG_DECLARE(ui_img_playericons_icon_warlock_png);    // assets\PlayerIcons\Icon_Warlock.png
LV_IMG_DECLARE(ui_img_conditions_new_blinded_png);    // assets\Conditions\new_Blinded.png
LV_IMG_DECLARE(ui_img_conditions_new_charmed_png);    // assets\Conditions\new_Charmed.png
LV_IMG_DECLARE(ui_img_conditions_new_deafened_png);    // assets\Conditions\new_Deafened.png
LV_IMG_DECLARE(ui_img_conditions_new_exhausion_png);    // assets\Conditions\new_Exhausion.png
LV_IMG_DECLARE(ui_img_conditions_new_frightened_png);    // assets\Conditions\new_Frightened.png
LV_IMG_DECLARE(ui_img_playericons_icon_artificer_png);    // assets\PlayerIcons\Icon_Artificer.png
LV_IMG_DECLARE(ui_img_playericons_trainingwheelsprotocol_png);    // assets\PlayerIcons\TrainingWheelsProtocol.png
LV_IMG_DECLARE(ui_img_conditionextra_cover_half_png);    // assets\ConditionExtra\Cover_half.png
LV_IMG_DECLARE(ui_img_conditionextra_cover_threequarter_png);    // assets\ConditionExtra\Cover_threeQuarter.png
LV_IMG_DECLARE(ui_img_conditionextra_cover_total_png);    // assets\ConditionExtra\Cover_total.png
LV_IMG_DECLARE(ui_img_1384426308);    // assets\Shield - wideBackR.png
LV_IMG_DECLARE(ui_img_conditionextra_new_disarmed_png);    // assets\ConditionExtra\new_Disarmed.png
LV_IMG_DECLARE(ui_img_conditions_new_grappled_png);    // assets\Conditions\new_Grappled.png
LV_IMG_DECLARE(ui_img_conditionextra_new_hidden_png);    // assets\ConditionExtra\new_Hidden.png
LV_IMG_DECLARE(ui_img_conditions_new_incapacitated_png);    // assets\Conditions\new_Incapacitated.png
LV_IMG_DECLARE(ui_img_conditions_new_invisible_png);    // assets\Conditions\new_Invisible.png
LV_IMG_DECLARE(ui_img_conditionextra_new_obscured_png);    // assets\ConditionExtra\new_Obscured.png
LV_IMG_DECLARE(ui_img_conditions_new_paralyzed_png);    // assets\Conditions\new_Paralyzed.png
LV_IMG_DECLARE(ui_img_conditions_new_petrified_png);    // assets\Conditions\new_Petrified.png
LV_IMG_DECLARE(ui_img_conditions_new_poisoned_png);    // assets\Conditions\new_Poisoned.png
LV_IMG_DECLARE(ui_img_conditions_new_prone_png);    // assets\Conditions\new_Prone.png
LV_IMG_DECLARE(ui_img_conditionextra_new_raging_png);    // assets\ConditionExtra\new_Raging.png
LV_IMG_DECLARE(ui_img_conditions_new_restrained_png);    // assets\Conditions\new_Restrained.png
LV_IMG_DECLARE(ui_img_conditionextra_new_surprised_png);    // assets\ConditionExtra\new_Surprised.png
LV_IMG_DECLARE(ui_img_conditions_new_stunned_png);    // assets\Conditions\new_Stunned.png
LV_IMG_DECLARE(ui_img_conditions_new_unconcious_png);    // assets\Conditions\new_Unconcious.png
LV_IMG_DECLARE(ui_img_539176514);    // assets\Conditions\10 - sMxDao4.png
LV_IMG_DECLARE(ui_img_2136458485);    // assets\Conditions\14 - gCB3xt0.png
LV_IMG_DECLARE(ui_img_1631664762);    // assets\Conditions\15 - Tcp83T3.png
LV_IMG_DECLARE(ui_img_241387375);    // assets\Conditions\2 - m9J6r00.png
LV_IMG_DECLARE(ui_img_2048466797);    // assets\Conditions\6 - ARfzri8.png
LV_IMG_DECLARE(ui_img_1701153993);    // assets\DamageTypes\12 - IagDlE1.png
LV_IMG_DECLARE(ui_img_2075715036);    // assets\DamageTypes\7 - IIztde9.png
LV_IMG_DECLARE(ui_img_images_d20_png);    // assets\Images\d20.png
LV_IMG_DECLARE(ui_img_rollingdice_d20pos1_png);    // assets\RollingDice\d20pos1.png
LV_IMG_DECLARE(ui_img_rollingdice_d20pos2_png);    // assets\RollingDice\d20pos2.png
LV_IMG_DECLARE(ui_img_rollingdice_d20pos3_png);    // assets\RollingDice\d20pos3.png
LV_IMG_DECLARE(ui_img_rollingdice_d20pos4_png);    // assets\RollingDice\d20pos4.png
LV_IMG_DECLARE(ui_img_d20_png);    // assets\d20.png

LV_FONT_DECLARE(ui_font_Aniron_50);
LV_FONT_DECLARE(ui_font_Aniron_Bold_50);
LV_FONT_DECLARE(ui_font_Black_Chancery_14);
LV_FONT_DECLARE(ui_font_Black_Chancery_16);
LV_FONT_DECLARE(ui_font_Black_Chancery_20);
LV_FONT_DECLARE(ui_font_Black_Chancery_25);
LV_FONT_DECLARE(ui_font_Black_Chancery_30);
LV_FONT_DECLARE(ui_font_Black_Chancery_50);
LV_FONT_DECLARE(ui_font_Draconis_50);
LV_FONT_DECLARE(ui_font_Draconis_Bold_50);
LV_FONT_DECLARE(ui_font_Draconis_Bold_Italics_50);
LV_FONT_DECLARE(ui_font_Draconis_Italics_50);
LV_FONT_DECLARE(ui_font_Dragon_Force_50);
LV_FONT_DECLARE(ui_font_Dragonwick_50);
LV_FONT_DECLARE(ui_font_Dungeon_50);

void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
